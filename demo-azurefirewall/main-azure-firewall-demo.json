{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environment": {
            "type": "string",
            "metadata": {
                "description": "Value used for Environment applied to all taggable resources"
            }
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "netApiVersionNum": "2019-11-01",
        "rgApiVersion": "2019-10-01",
        "hubVnetName": "vnet-hub",
        "onPremVnetName": "vnet-onprem",
        "spokeVnetName": "vnet-spoke",
        "hubCidr": "10.10.0.0/16",
        "onpremCidr": "10.0.0.0/16",
        "hubGatewaySubnetCidr": "10.10.0.0/24",
        "hubBastionSubnetCidr": "10.10.1.0/24",
        "hubFirewallSubnetCidr": "10.10.2.0/24",
        "hubFirewallMgmtSubnetCidr": "10.10.3.0/24",
        "hubPrimarySubnetCidr": "10.10.4.0/24",
        "hubSecondarySubnetCidr": "10.10.5.0/24",
        "onPremGatewaySubnetCidr": "10.0.0.0/24",
        "onPremPrimarySubnetCidr": "10.0.1.0/24",
        "spokeCidrs": [
            "10.11.0.0/16",
            "10.12.0.0/16"
        ],
        "appSubnetCidrs": [
            "10.11.0.0/24",
            "10.12.0.0/24"
        ],
        "dataSubnetCidrs": [
            "10.11.1.0/24",
            "10.12.1.0/24"
        ],
        "bastionSubnetName": "AzureBastionSubnet",
        "primarySubnetName": "snet-pri",
        "secondarySubnetName": "snet-sec",
        "appSubnetName": "snet-app",
        "dataSubnetName": "snet-data",
        "hubToSpokePeeringName": "peerhubtospoke",
        "spokeToHubPeeringName": "peerspoketohub",
        "bastionPublicIpName": "pip-bastion",
        "azFirewallPublicIpName": "pip-azfw",
        "azFirewallMgmtPublicIpName": "pip-azfwmgmt",
        "hubVngPublicIpName": "pip-hubvng",
        "hubVngName": "vng-hub",
        "hubVngConnName": "conn-hubtoonprem",
        "onpremVngConnName": "conn-onpremtohub",
        "onPremVngPublicIpName": "pip-onpremvng",
        "onPremVngName": "vng-onprem",
        "vngConnectionSecret": "[uniqueString(resourceGroup().id, deployment().name)]",
        "bastionName": "bstss",
        "azureFirewallName": "fwhub",
        "hubRouteTable": "rt-hub",
        "hubVNGRouteTable": "rt-vng-hub",
        "spokeRouteTable": "rt-spoke"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('hubVnetName')]",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('hubCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[variables('hubGatewaySubnetCidr')]"
                        }
                    },
                    {
                        "name": "AzureFirewallSubnet",
                        "properties": {
                            "addressPrefix": "[variables('hubFirewallSubnetCidr')]"
                        }
                    },
                    {
                        "name": "AzureFirewallManagementSubnet",
                        "properties": {
                            "addressPrefix": "[variables('hubFirewallMgmtSubnetCidr')]"
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "[variables('hubBastionSubnetCidr')]"
                        }
                    },
                    {
                        "name": "[variables('primarySubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('hubPrimarySubnetCidr')]"
                        }
                    },
                    {
                        "name": "[variables('secondarySubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('hubSecondarySubnetCidr')]"
                        }
                    }
                ],
                "enableDdosProtection": false
            },
            "resources": [
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('onPremVnetName')]",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('onpremCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[variables('onPremGatewaySubnetCidr')]"
                        }
                    },
                    {
                        "name": "[variables('primarySubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('onPremPrimarySubnetCidr')]"
                        }
                    }
                ],
                "enableDdosProtection": false
            },
            "resources": [
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(variables('spokeVnetName'),copyIndex(1))]",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[concat(variables('spokeCidrs')[copyIndex()])]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[concat(variables('appSubnetName'),copyIndex(1))]",
                        "properties": {
                            "addressPrefix": "[concat(variables('appSubnetCidrs')[copyIndex()])]"
                        }
                    },
                    {
                        "name": "[concat(variables('dataSubnetName'),copyIndex(1))]",
                        "properties": {
                            "addressPrefix": "[concat(variables('dataSubnetCidrs')[copyIndex()])]"
                        }
                    }
                ],
                "enableDdosProtection": false
            },
            "copy": {
                "name": "spokevnets",
                "count": "[length(variables('spokeCidrs'))]"
            },
            "resources": [
            ]
        },
        {
            "name": "[variables('hubVngPublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIpAllocationMethod": "Dynamic"
            },
            "sku": {
                "name": "Basic"
            },
            "tags": {
                "Environment": "[parameters('environment')]"
            }
        },
        {
            "name": "[variables('hubVngName')]",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('hubVngPublicIpName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('hubVnetName'))]"
            ],
            "properties": {
                "gatewayType": "vpn",
                "ipConfigurations": [
                    {
                        "name": "default",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('hubVnetName'), 'GatewaySubnet')]"
                            },
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('hubVngPublicIpName'))]"
                            }
                        }
                    }
                ],
                "vpnType": "RouteBased",
                "vpnGatewayGeneration": "Generation2",
                "sku": {
                    "name": "VpnGw2",
                    "tier": "VpnGw2"
                }
            }
        },
        {
            "name": "[variables('onPremVngPublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIpAllocationMethod": "Dynamic"
            },
            "sku": {
                "name": "Basic"
            },
            "tags": {
                "Environment": "[parameters('environment')]"
            }
        },
        {
            "name": "[variables('onPremVngName')]",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('onPremVngPublicIpName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('onPremVnetName'))]"
            ],
            "properties": {
                "gatewayType": "vpn",
                "ipConfigurations": [
                    {
                        "name": "default",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('onPremVnetName'), 'GatewaySubnet')]"
                            },
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('onPremVngPublicIpName'))]"
                            }
                        }
                    }
                ],
                "vpnType": "RouteBased",
                "vpnGatewayGeneration": "Generation2",
                "sku": {
                    "name": "VpnGw2",
                    "tier": "VpnGw2"
                }
            }
        },
        {
            "name": "[variables('hubVngConnName')]",
            "type": "Microsoft.Network/connections",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworkGateways/', variables('hubVngName'))]",
                "[concat('Microsoft.Network/virtualNetworkGateways/', variables('onPremVngName'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways/', variables('hubVngName'))]"
                },
                "virtualNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways/', variables('onPremVngName'))]"
                },
                "connectionType": "Vnet2Vnet",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "sharedKey": "[variables('vngConnectionSecret')]",
                "enableBgp": false,
                "useLocalAzureIpAddress": false,
                "usePolicyBasedTrafficSelectors": false,
                "ipsecPolicies": [],
                "trafficSelectorPolicies": []
            }
        },
        {
            "name": "[variables('onpremVngConnName')]",
            "type": "Microsoft.Network/connections",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworkGateways/', variables('hubVngName'))]",
                "[concat('Microsoft.Network/virtualNetworkGateways/', variables('onPremVngName'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways/', variables('onPremVngName'))]"

                },
                "virtualNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways/', variables('hubVngName'))]"
                },
                "connectionType": "Vnet2Vnet",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "sharedKey": "[variables('vngConnectionSecret')]",
                "enableBgp": false,
                "useLocalAzureIpAddress": false,
                "usePolicyBasedTrafficSelectors": false,
                "ipsecPolicies": [],
                "trafficSelectorPolicies": []
            }
        },
        {
            "name": "[concat(variables('hubVnetName'),'/',variables('hubToSpokePeeringName'),copyIndex(1))]",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('hubVnetName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('spokeVnetName'),copyIndex(1))]",
                "[concat('Microsoft.Network/virtualNetworkGateways/', variables('hubVngName'))]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": "true",
                "allowForwardedTraffic": "true",
                "allowGatewayTransit": "true",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks',concat(variables('spokeVnetName'),copyIndex(1)))]"
                }
            },
            "copy": {
                "name": "copyhubpeerings",
                "count": "[length(variables('spokeCidrs'))]"
            }
        },
        {
            "name": "[concat(variables('spokeVnetName'),copyIndex(1),'/',variables('spokeToHubPeeringName'))]",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('hubVnetName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('spokeVnetName'),copyIndex(1))]",
                "[concat('Microsoft.Network/virtualNetworkGateways/', variables('hubVngName'))]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": "true",
                "allowForwardedTraffic": "true",
                "allowGatewayTransit": "false",
                "useRemoteGateways": "true",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('hubVnetName'))]"
                }
            },
            "copy": {
                "name": "copyspokepeerings",
                "count": "[length(variables('spokeCidrs'))]"
            }
        },
        {
            "name": "[variables('bastionPublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIpAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard"
            },
            "tags": {
                "Environment": "[parameters('environment')]"
            }
        },
        {
            "name": "[variables('bastionName')]",
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/', variables('bastionPublicIpName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('hubVnetName'))]"
            ],
            "tags": {
                "Environment": "[parameters('environment')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "bastionConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('hubVnetName'), variables('bastionSubnetName'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('bastionPublicIpName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ]
            }
        },
        {
            "name": "fw-hub",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('rgApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('hubVnetName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "environment": {
                        "value": "[parameters('environment')]"
                    },
                    "hubVnetName": {
                        "value": "[variables('hubVnetName')]"
                    },
                    "netApiVersion": {
                        "value": "[variables('netApiVersionNum')]"
                    },
                    "fwHubName": {
                        "value": "[variables('azureFirewallName')]"
                    },
                    "azFirewallPublicIP": {
                        "value": "[variables('azFirewallPublicIpName')]"
                    },
                    "azFirewallMgmtPublicIP": 
                    {
                        "value": "[variables('azFirewallMgmtPublicIpName')]"
                    }
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/mattfeltonma/arm-templates/master/demo-azurefirewall/hub-firewall.json",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('hubVNGRouteTable')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/fw-hub')]"
            ],
            "properties": {
                "routes": [
                    {
                        "name": "udr-hub",
                        "properties": {
                            "addressPrefix": "[variables('hubCidr')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[reference('fw-hub').outputs.fwPrivateIP.value]"
                        }
                    }
                ],
                "disableBgpRoutePropagation": "False"
            },
            "resources": [
            ]
        },
        {
            "name": "[variables('hubRouteTable')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/fw-hub')]"
            ],
            "properties": {
                "routes": [
                    {
                        "name": "udr-bastion",
                        "properties": {
                            "addressPrefix": "[variables('hubBastionSubnetCidr')]",
                            "nextHopType": "VnetLocal"
                        }
                    },
                    {
                        "name": "udr-hub",
                        "properties": {
                            "addressPrefix": "[variables('hubCidr')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[reference('fw-hub').outputs.fwPrivateIP.value]"
                        }
                    },
                    {
                        "name": "udr-onprem",
                        "properties": {
                            "addressPrefix": "[variables('onpremCidr')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[reference('fw-hub').outputs.fwPrivateIP.value]"
                        }
                    }
                ],
                "disableBgpRoutePropagation": "False"
            },
            "resources": []
        },
        {
            "name": "[concat(variables('hubRouteTable'),'/','udr-spoke',copyIndex(1))]",
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/routeTables/', variables('hubRouteTable'))]"
            ],
            "properties": {
                "addressPrefix": "[variables('spokeCidrs')[copyIndex()]]",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "[reference('fw-hub').outputs.fwPrivateIP.value]"
            },
            "copy": {
                "name": "copyspokerouteshub",
                "count": "[length(variables('spokeCidrs'))]"
            }
        },
        {
            "name": "[concat(variables('hubVNGRouteTable'),'/','udr-spoke',copyIndex(1))]",
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/routeTables/', variables('hubVNGRouteTable'))]"
            ],            
            "properties": {
                "addressPrefix": "[variables('spokeCidrs')[copyIndex()]]",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "[reference('fw-hub').outputs.fwPrivateIP.value]"
            },
            "copy": {
                "name": "copyspokeroutesvng",
                "count": "[length(variables('spokeCidrs'))]"
            }
        },
        {
            "name": "[variables('spokeRouteTable')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/fw-hub')]"
            ],
            "properties": {
                "routes": [
                    {
                        "name": "udr-default",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[reference('fw-hub').outputs.fwPrivateIP.value]"
                        }
                    },
                    {
                        "name": "udr-hub",
                        "properties": {
                            "addressPrefix": "[variables('hubCidr')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[reference('fw-hub').outputs.fwPrivateIP.value]"
                        }
                    }
                ],
                "disableBgpRoutePropagation": "True"
            },
            "resources": []
        }
    ]
}
