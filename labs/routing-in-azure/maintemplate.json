{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "Administrator name for VMs that are created"
            }
        },
        "vmAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the VMs that are created"
            }
        },
        "vmSku": {
            "type": "string",
            "metadata": {
                "description": "The SKU of VM to deploy"
            },
            "defaultValue": "Standard_DS2_v2"
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that will be associated to the VM"
            },
            "defaultValue": {
                "environment": "routelab"
            }
        },
        "hubVnetName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the hub Virtual Network"
            },
            "defaultValue": "vnet-hub"
        },
        "onPremVnetName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the on-premises Virtual Network"
            },
            "defaultValue": "vnet-onprem"
        },
        "spokeVnetName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the spoke Virtual Networks"
            },
            "defaultValue": "vnet-spoke"
        },
        "hubCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR block assigned to the hub Virtual Network"
            },
            "defaultValue": "10.1.0.0/16"
        },
        "onpremCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR block assigned to the on-premises Virtual Network"
            },
            "defaultValue": "10.0.0.0/16"
        },
        "spokeCidrs": {
            "type": "array",
            "metadata": {
                "description": "The CIDR blocks assigned to the spoke Virtual Networks"
            },
            "defaultValue": [
                "10.2.0.0/16",
                "10.3.0.0/16"
            ],
            "maxLength": 2
        },
        "hubGatewaySubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR block assigned to the hub Gateway subnet"
            },
            "defaultValue": "10.1.0.0/24"
        },
        "hubBastionSubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR block assigned to the hub Bastion subnet"
            },
            "defaultValue": "10.1.1.0/24"
        },
        "hubFirewallSubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR block assigned to the hub Azure Firewall subnet"
            },
            "defaultValue": "10.1.2.0/24"
        },
        "hubPrimarySubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR block assigned to the hub primary subnet"
            },
            "defaultValue": "10.1.3.0/24"
        },
        "hubSecondarySubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR block assigned to the hub secondary subnet"
            },
            "defaultValue": "10.1.4.0/24"
        },
        "onPremGatewaySubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR block assigned to the on-premises Gateway subnet"
            },
            "defaultValue": "10.0.0.0/24"
        },
        "onPremPrimarySubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR block assigned to the on-premises primary subnet"
            },
            "defaultValue": "10.0.1.0/24"
        },
        "spokeAppSubnetCidrs": {
            "type": "array",
            "metadata": {
                "description": "The CIDR blocks assigned to the spoke application subnets"
            },
            "defaultValue": [
                "10.2.0.0/24",
                "10.3.0.0/24"
            ],
            "maxLength": 2
        },
        "spokeDataSubnetCidrs": {
            "type": "array",
            "metadata": {
                "description": "The CIDR blocks assigned to the spoke data subnets"
            },
            "defaultValue": [
                "10.2.1.0/24",
                "10.3.1.0/24"
            ],
            "maxLength": 2
        },
        "primarySubnetName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the primary subnet in the hub and on-premises Virtual Networks"
            },
            "defaultValue": "snet-pri"
        },
        "secondarySubnetName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the secondary subnet in the hub Virtual Network"
            },
            "defaultValue": "snet-sec"
        },
        "appSubnetName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the application subnet in the spoke Virtual Networks"
            },
            "defaultValue": "snet-app"
        },
        "dataSubnetName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the data subnet in the spoke Virtual Networks"
            },
            "defaultValue": "snet-data"
        },
        "bastionPublicIpName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the Public IP used by Azure Bastion"
            },
            "defaultValue": "pip-bastion"
        },
        "azFirewallPublicIpName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the Public IP used by Azure Firewall"
            },
            "defaultValue": "pip-azfw"
        },
        "hubVngPublicIpName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the Public IP used by hub Virtual Network Gateway"
            },
            "defaultValue": "pip-hubvng"
        },
        "hubVngName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the hub Virtual Network Gateway"
            },
            "defaultValue": "vng-hub"
        },
        "onPremVngPublicIpName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the Public IP used by the on-premises Virtual Network Gateway"
            },
            "defaultValue": "pip-onpremvng"
        },
        "onPremVngName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the on-premises Virtual Network Gateway"
            },
            "defaultValue": "vng-onprem"
        },
        "bastionName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the instance of Azure Bastion"
            },
            "defaultValue": "bstss"
        },
        "azureFirewallName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the Azure Firewall instance"
            },
            "defaultValue": "fwhub"
        },
        "hubPriRouteTable": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the Route Table assigned to the primary subnet in the hub Virtual Network"
            },
            "defaultValue": "rt-hub-pri"
        },
        "hubSecRouteTable": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the Route Table assigned to the secondary subnet in the hub Virtual Network"
            },
            "defaultValue": "rt-hub-sec"
        },
        "hubVngRouteTable": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the Route Table assigned to the Gateway subnet in the hub Virtual Network"
            },
            "defaultValue": "rt-vng-hub"
        },
        "spokeRouteTable": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the Route Table assigned to the application and data subnets in the spoke Virtual Network"
            },
            "defaultValue": "rt-spoke"
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "netApiVersionNum": "2019-11-01",
        "resourceDeploymentsApiVersion": "2019-10-01",
        "laApiVersion": "2015-11-01-preview",
        "diagApiVersion": "2017-05-01-preview",
        "bastionSubnetName": "AzureBastionSubnet",
        "hubToSpokePeeringName": "peerhubtospoke",
        "spokeToHubPeeringName": "peerspoketohub",
        "hubVngConnName": "conn-hubtoonprem",
        "onpremVngConnName": "conn-onpremtohub",
        "vngConnectionSecret": "[uniqueString(subscription().id, resourceGroup().id)]",
        "laWorkspaceName": "[concat('la-',uniqueString(resourceGroup().id))]"
    },
    "resources": [
        /* Create centralized Log Analytics Workspace */
        {
            "name": "[variables('laWorkspaceName')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "[variables('laApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "retentionInDays": "30"
            },
            "resources": [
            ]
        },
        /* Create hub Virtual Network */
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('hubVnetName')]",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('hubCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[parameters('hubGatewaySubnetCidr')]"
                        }
                    },
                    {
                        "name": "AzureFirewallSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('hubFirewallSubnetCidr')]"
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('hubBastionSubnetCidr')]"
                        }
                    },
                    {
                        "name": "[parameters('primarySubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('hubPrimarySubnetCidr')]"
                        }
                    },
                    {
                        "name": "[parameters('secondarySubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('hubSecondarySubnetCidr')]"
                        }
                    }
                ],
                "enableDdosProtection": false
            },
            "resources": [
            ]
        },
        /* Create on-premises Virtual Network */
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('onPremVnetName')]",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('onpremCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[parameters('onPremGatewaySubnetCidr')]"
                        }
                    },
                    {
                        "name": "[parameters('primarySubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('onPremPrimarySubnetCidr')]"
                        }
                    }
                ],
                "enableDdosProtection": false
            },
            "resources": [
            ]
        },
        /* Create two spoke Virtual Networks */
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(parameters('spokeVnetName'),copyIndex(1))]",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                         "[concat(parameters('spokeCidrs')[copyIndex()])]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[concat(parameters('appSubnetName'),copyIndex(1))]",
                        "properties": {
                            "addressPrefix": "[concat(parameters('spokeAppSubnetCidrs')[copyIndex()])]"
                        }
                    },
                    {
                        "name": "[concat(parameters('dataSubnetName'),copyIndex(1))]",
                        "properties": {
                            "addressPrefix": "[concat(parameters('spokeDataSubnetCidrs')[copyIndex()])]"
                        }
                    }
                ],
                "enableDdosProtection": false
            },
            "copy": {
                "name": "spokevnets",
                "count": "[length(parameters('spokeCidrs'))]"
            },
            "resources": [
            ]
        },
        /* Create Public IP for hub Virtual Network Gateway */
        {
            "name": "[parameters('hubVngPublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "publicIpAllocationMethod": "Dynamic"
            },
            "sku": {
                "name": "Basic"
            }
        },
        /* Create hub Virtual Network Gateway */
        {
            "name": "[parameters('hubVngName')]",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('hubVngPublicIpName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('hubVnetName'))]"
            ],
            "properties": {
                "gatewayType": "vpn",
                "ipConfigurations": [
                    {
                        "name": "default",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubVnetName'), 'GatewaySubnet')]"
                            },
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('hubVngPublicIpName'))]"
                            }
                        }
                    }
                ],
                "vpnType": "RouteBased",
                "vpnGatewayGeneration": "Generation2",
                "sku": {
                    "name": "VpnGw2",
                    "tier": "VpnGw2"
                }
            }
        },
        /* Create Public IP for on-premises Virtual Network Gateway */
        {
            "name": "[parameters('onPremVngPublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "publicIpAllocationMethod": "Dynamic"
            },
            "sku": {
                "name": "Basic"
            }
        },
        /* Create on-premises Virtual Network Gateway */
        {
            "name": "[parameters('onPremVngName')]",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('onPremVngPublicIpName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('onPremVnetName'))]"
            ],
            "properties": {
                "gatewayType": "vpn",
                "ipConfigurations": [
                    {
                        "name": "default",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('onPremVnetName'), 'GatewaySubnet')]"
                            },
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('onPremVngPublicIpName'))]"
                            }
                        }
                    }
                ],
                "vpnType": "RouteBased",
                "vpnGatewayGeneration": "Generation2",
                "sku": {
                    "name": "VpnGw2",
                    "tier": "VpnGw2"
                }
            }
        },
        /* Create VPN connection to connect hub Virtual Network Gateway to on-premises Virtual Network Gateway */
        {
            "name": "[variables('hubVngConnName')]",
            "type": "Microsoft.Network/connections",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('hubVngName'))]",
                "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('onPremVngName'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways/',parameters('hubVngName'))]"
                },
                "virtualNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways/', parameters('onPremVngName'))]"
                },
                "connectionType": "Vnet2Vnet",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "sharedKey": "[variables('vngConnectionSecret')]",
                "enableBgp": false,
                "useLocalAzureIpAddress": false,
                "usePolicyBasedTrafficSelectors": false,
                "ipsecPolicies": [
                ],
                "trafficSelectorPolicies": [
                ]
            }
        },
        /* Create VPN connection to connect on-premises Virtual Network Gateway to hub Virtual Network Gateway */
        {
            "name": "[variables('onpremVngConnName')]",
            "type": "Microsoft.Network/connections",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('hubVngName'))]",
                "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('onPremVngName'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways/', parameters('onPremVngName'))]"

                },
                "virtualNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways/', parameters('hubVngName'))]"
                },
                "connectionType": "Vnet2Vnet",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "sharedKey": "[variables('vngConnectionSecret')]",
                "enableBgp": false,
                "useLocalAzureIpAddress": false,
                "usePolicyBasedTrafficSelectors": false,
                "ipsecPolicies": [
                ],
                "trafficSelectorPolicies": [
                ]
            }
        },
        /* Create a Public IP for the Azure Bastion service hosted in the hub Virtual Network */
        {
            "name": "[parameters('bastionPublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "publicIpAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard"
            }
        },
        /* Create a Public IP for the Azure Firewall instance */
        {
            "name": "[parameters('azFirewallPublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "publicIpAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard"
            }
        },
        /* Create the Azure Firewall instance */
        {
            "name": "[parameters('azureFirewallName')]",
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/', parameters('azFirewallPublicIpName'))]"
            ],
            "zones": [
                "1"
            ],
            "properties": {
                "networkRuleCollections": [
                    {
                        "name": "RdpHubVnet",
                        "properties": {
                            "priority": 100,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "RdpIntraSubnet",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('hubSecondarySubnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('hubSecondarySubnetCidr')]"
                                    ],
                                    "destinationPorts": [
                                        "3389"
                                    ]
                                },
                                {
                                    "name": "RdpIntraVNet",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('hubPrimarySubnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('hubSecondarySubnetCidr')]"
                                    ],
                                    "destinationPorts": [
                                        "3389"
                                    ]
                                },
                                {
                                    "name": "RdpInterVNet",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('hubPrimarySubnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('spokeAppSubnetCidrs')[0]]",
                                        "[parameters('spokeAppSubnetCidrs')[1]]"
                                    ],
                                    "destinationPorts": [
                                        "3389"
                                    ]
                                },
                                {
                                    "name": "RdpInterSpoke",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeAppSubnetCidrs')[0]]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('spokeAppSubnetCidrs')[1]]"
                                    ],
                                    "destinationPorts": [
                                        "3389"
                                    ]
                                },
                                {
                                    "name": "RdpOnpremAzure",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('onpremCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('hubCidr')]",
                                        "[parameters('spokeCidrs')[0]]",
                                        "[parameters('spokeCidrs')[1]]"
                                    ],
                                    "destinationPorts": [
                                        "3389"
                                    ]
                                },
                                {
                                    "name": "RdpAzureOnprem",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('hubCidr')]",
                                        "[parameters('spokeCidrs')[0]]",
                                        "[parameters('spokeCidrs')[1]]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('onpremCidr')]"
                                    ],
                                    "destinationPorts": [
                                        "3389"
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "applicationRuleCollections": [
                    {
                        "name": "Web",
                        "properties": {
                            "priority": 100,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "AllowCNN",
                                    "description": "Allow access to CNN",
                                    "sourceAddresses": [
                                        "[parameters('hubCidr')]",
                                        "[parameters('spokeAppSubnetCidrs')[0]]",
                                        "[parameters('spokeAppSubnetCidrs')[1]]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": "443"
                                        }
                                    ],
                                    "targetFqdns": [
                                        "cnn.com"
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubVnetName'), 'AzureFirewallSubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('azFirewallPublicIpName'))]"
                            }
                        }
                    }
                ],
                "threatIntelMode": "Alert",
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                }
            }
        },
        /* Configure the diagnostic settings for Azure Firewall to write the Log Analytics Workspace */
        {
            "name": "[concat(parameters('azureFirewallName'),'/microsoft.insights/diag')]",
            "type": "Microsoft.Network/azureFirewalls/providers/diagnosticSettings",
            "apiVersion": "[variables('diagApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Network/azureFirewalls/',parameters('azureFirewallName'))]"
            ],
            "properties": {
                "name": "SendToWorkspace",
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName'))]",
                "logs": [
                    {
                        "category": "AzureFirewallApplicationRule",
                        "enabled": true
                    },
                    {
                        "category": "AzureFirewallNetworkRule",
                        "enabled": true
                    }
                ],
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "enabled": true
                    }
                ]
            },
            "resources": [
            ]
        },
        /* Create a Route Table for the Gateway Subnet in the hub Virtual Network */
        {
            "name": "[parameters('hubVNGRouteTable')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Network/azureFirewalls/',parameters('azureFirewallName'))]"
            ],
            "properties": {
                "routes": [
                    {
                        "name": "udr-hub",
                        "properties": {
                            "addressPrefix": "[parameters('hubCidr')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[reference(parameters('azureFirewallName')).ipConfigurations[0].properties.privateIPAddress]"
                        }
                    }
                ],
                "disableBgpRoutePropagation": "False"
            },
            "resources": [
            ]
        },
        /* Create a Route Table for the primary subnet in the hub Virtual Network */
        {
            "name": "[parameters('hubPriRouteTable')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Network/azureFirewalls/',parameters('azureFirewallName'))]"
            ],
            "properties": {
                "routes": [
                    {
                        "name": "udr-default",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[reference(parameters('azureFirewallName')).ipConfigurations[0].properties.privateIPAddress]"
                        }
                    },
                    {
                        "name": "udr-bastion",
                        "properties": {
                            "addressPrefix": "[parameters('hubBastionSubnetCidr')]",
                            "nextHopType": "VnetLocal"
                        }
                    },
                    {
                        "name": "udr-hub",
                        "properties": {
                            "addressPrefix": "[parameters('hubCidr')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[reference(parameters('azureFirewallName')).ipConfigurations[0].properties.privateIPAddress]"
                        }
                    },
                    {
                        "name": "udr-onprem",
                        "properties": {
                            "addressPrefix": "[parameters('onpremCidr')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[reference(parameters('azureFirewallName')).ipConfigurations[0].properties.privateIPAddress]"
                        }
                    }
                ],
                "disableBgpRoutePropagation": "False"
            },
            "resources": [
            ]
        },
        /* Create a Route Table for the secondary subnet in the hub Virtual Network */
        {
            "name": "[parameters('hubSecRouteTable')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Network/azureFirewalls/',parameters('azureFirewallName'))]"
            ],
            "properties": {
                "routes": [
                    {
                        "name": "udr-default",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[reference(parameters('azureFirewallName')).ipConfigurations[0].properties.privateIPAddress]"
                        }
                    },
                    {
                        "name": "udr-bastion",
                        "properties": {
                            "addressPrefix": "[parameters('hubBastionSubnetCidr')]",
                            "nextHopType": "VnetLocal"
                        }
                    },
                    {
                        "name": "udr-hub",
                        "properties": {
                            "addressPrefix": "[parameters('hubCidr')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[reference(parameters('azureFirewallName')).ipConfigurations[0].properties.privateIPAddress]"
                        }
                    },
                    {
                        "name": "udr-sec",
                        "properties": {
                            "addressPrefix": "[parameters('hubSecondarySubnetCidr')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[reference(parameters('azureFirewallName')).ipConfigurations[0].properties.privateIPAddress]"
                        }
                    },
                    {
                        "name": "udr-onprem",
                        "properties": {
                            "addressPrefix": "[parameters('onpremCidr')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[reference(parameters('azureFirewallName')).ipConfigurations[0].properties.privateIPAddress]"
                        }
                    }
                ],
                "disableBgpRoutePropagation": "False"
            },
            "resources": [
            ]
        },
        /* Create two UDRs (User Defined Routes) for the route table applied to the primary
        subnet in the hub Virtual Network to route destinated to the spoke Virtual Networks to Azure Firewall */
        {
            "name": "[concat(parameters('hubPriRouteTable'),'/','udr-spoke',copyIndex(1))]",
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/routeTables/', parameters('hubPriRouteTable'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('spokeCidrs')[copyIndex()]]",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "[reference(parameters('azureFirewallName')).ipConfigurations[0].properties.privateIPAddress]"
            },
            "copy": {
                "name": "copyspokerouteshubpri",
                "count": "[length(parameters('spokeCidrs'))]"
            }
        },
        /* Create two UDRs (User Defined Routes) for the route table applied to the secondary
        subnet in the hub Virtual Network to route destinated to the spoke Virtual Networks to Azure Firewall */
        {
            "name": "[concat(parameters('hubSecRouteTable'),'/','udr-spoke',copyIndex(1))]",
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/routeTables/', parameters('hubSecRouteTable'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('spokeCidrs')[copyIndex()]]",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "[reference(parameters('azureFirewallName')).ipConfigurations[0].properties.privateIPAddress]"
            },
            "copy": {
                "name": "copyspokerouteshubsec",
                "count": "[length(parameters('spokeCidrs'))]"
            }
        },
        /* Create two UDRs (User Defined Routes) for the route table applied to the Gateway Subnet
        in the hub Virtual Network to route destinated to the spoke Virtual Networks to Azure Firewall */
        {
            "name": "[concat(parameters('hubVNGRouteTable'),'/','udr-spoke',copyIndex(1))]",
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/routeTables/', parameters('hubVNGRouteTable'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('spokeCidrs')[copyIndex()]]",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "[reference(parameters('azureFirewallName')).ipConfigurations[0].properties.privateIPAddress]"
            },
            "copy": {
                "name": "copyspokeroutesvng",
                "count": "[length(parameters('spokeCidrs'))]"
            }
        },
        /* Create a Route Table for the app and data subnets in the spoke Virtual Network */
        {
            "name": "[parameters('spokeRouteTable')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Network/azureFirewalls/',parameters('azureFirewallName'))]"
            ],
            "properties": {
                "routes": [
                    {
                        "name": "udr-default",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[reference(parameters('azureFirewallName')).ipConfigurations[0].properties.privateIPAddress]"
                        }
                    },
                    {
                        "name": "udr-hub",
                        "properties": {
                            "addressPrefix": "[parameters('hubCidr')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[reference(parameters('azureFirewallName')).ipConfigurations[0].properties.privateIPAddress]"
                        }
                    }
                ],
                "disableBgpRoutePropagation": "True"
            },
            "resources": [
            ]
        },
        /* Assign Route Tables to the appropriate subnets */
        {
            "name": "routeAssignment",
            "apiVersion": "[variables('resourceDeploymentsApiVersion')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('hubVngName'))]",
                "[concat('Microsoft.Network/routeTables/', parameters('hubPriRouteTable'))]",
                "[concat('Microsoft.Network/routeTables/', parameters('hubSecRouteTable'))]",
                "[concat('Microsoft.Network/routeTables/', parameters('hubVNGRouteTable'))]",
                "[concat('Microsoft.Network/routeTables/', parameters('spokeRouteTable'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "parameters": {
                    "netApiVersionNum": {
                        "value": "[variables('netApiVersionNum')]"
                    },
                    "hubGatewaySubnetRouteTableId": {
                        "value": "[resourceId('Microsoft.Network/routeTables',parameters('hubVNGRouteTable'))]"
                    },
                    "hubPriRouteTableId": {
                        "value": "[resourceId('Microsoft.Network/routeTables',parameters('hubPriRouteTable'))]"
                    },
                    "hubSecRouteTableId": {
                        "value": "[resourceId('Microsoft.Network/routeTables',parameters('hubSecRouteTable'))]"
                    },
                    "spokeRouteTableId": {
                        "value": "[resourceId('Microsoft.Network/routeTables',parameters('spokeRouteTable'))]"
                    },
                    "hubVnetName": {
                        "value": "[parameters('hubVnetName')]"
                    },
                    "hubGatewaySubnetCidr": {
                        "value": "[parameters('hubGatewaySubnetCidr')]"
                    },
                    "hubPrimarySubnetCidr": {
                        "value": "[parameters('hubPrimarySubnetCidr')]"
                    },
                    "hubSecondarySubnetCidr": {
                        "value": "[parameters('hubSecondarySubnetCidr')]"
                    },
                    "primarySubnetName": {
                        "value": "[parameters('primarySubnetName')]"
                    },
                    "secondarySubnetName": {
                        "value": "[parameters('secondarySubnetName')]"
                    },
                    "spokeVnetName": {
                        "value": "[parameters('spokeVnetName')]"
                    },
                    "appSubnetName": {
                        "value": "[parameters('appSubnetName')]"
                    },
                    "dataSubnetName": {
                        "value": "[parameters('dataSubnetName')]"
                    },
                    "spokeCidrs": {
                        "value": "[parameters('spokeCidrs')]"
                    },
                    "appSubnetCidrs": {
                        "value": "[parameters('spokeAppSubnetCidrs')]"
                    },
                    "dataSubnetCidrs": {
                        "value": "[parameters('spokeDataSubnetCidrs')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "netApiVersionNum": {
                            "type": "string"
                        },
                        "hubVnetName": {
                            "type": "string"
                        },
                        "hubGatewaySubnetCidr": {
                            "type": "string"
                        },
                        "hubPrimarySubnetCidr": {
                            "type": "string"
                        },
                        "hubSecondarySubnetCidr": {
                            "type": "string"
                        },
                        "primarySubnetName": {
                            "type": "string"
                        },
                        "secondarySubnetName": {
                            "type": "string"
                        },
                        "hubGatewaySubnetRouteTableId": {
                            "type": "string"
                        },
                        "hubPriRouteTableId": {
                            "type": "string"
                        },
                        "hubSecRouteTableId": {
                            "type": "string"
                        },
                        "spokeRouteTableId": {
                            "type": "string"
                        },
                        "spokeVnetName": {
                            "type": "string"
                        },
                        "appSubnetName": {
                            "type": "string"
                        },
                        "dataSubnetName": {
                            "type": "string"
                        },
                        "spokeCidrs": {
                            "type": "array"
                        },
                        "appSubnetCidrs": {
                            "type": "array"
                        },
                        "dataSubnetCidrs": {
                            "type": "array"
                        }
                    },
                    "resources": [
                        {
                            "name": "[concat(parameters('hubVnetName'),'/GatewaySubnet')]",
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "apiVersion": "[parameters('netApiVersionNum')]",
                            "properties": {
                                "addressPrefix": "[parameters('hubGatewaySubnetCidr')]",
                                "routeTable": {
                                    "id": "[parameters('hubGatewaySubnetRouteTableId')]"
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('hubVnetName'),'/',parameters('primarySubnetName'))]",
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "dependsOn": [
                                "[concat('Microsoft.Network/virtualNetworks/',parameters('hubVnetName'), '/subnets/GatewaySubnet')]"
                            ],
                            "apiVersion": "[parameters('netApiVersionNum')]",
                            "properties": {
                                "addressPrefix": "[parameters('hubPrimarySubnetCidr')]",
                                "routeTable": {
                                    "id": "[parameters('hubPriRouteTableId')]"
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('hubVnetName'),'/',parameters('SecondarySubnetName'))]",
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "dependsOn": [
                                "[concat('Microsoft.Network/virtualNetworks/',parameters('hubVnetName'), '/subnets/',parameters('primarySubnetName'))]"
                            ],
                            "apiVersion": "[parameters('netApiVersionNum')]",
                            "properties": {
                                "addressPrefix": "[parameters('hubSecondarySubnetCidr')]",
                                "routeTable": {
                                    "id": "[parameters('hubSecRouteTableId')]"
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('spokeVnetName'),copyIndex(1),'/',parameters('appSubnetName'),copyIndex(1))]",
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "apiVersion": "[parameters('netApiVersionNum')]",
                            "properties": {
                                "addressPrefix": "[parameters('appSubnetCidrs')[copyIndex()]]",
                                "routeTable": {
                                    "id": "[parameters('spokeRouteTableId')]"
                                }
                            },
                            "copy": {
                                "name": "spokerouteassign",
                                "count": "[length(parameters('spokeCidrs'))]"
                            }
                        },
                        {
                            "name": "[concat(parameters('spokeVnetName'),copyIndex(1),'/',parameters('dataSubnetName'),copyIndex(1))]",
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "dependsOn": [
                                "[concat('Microsoft.Network/virtualNetworks/',parameters('spokeVnetName'), copyIndex(1), '/subnets/',parameters('appSubnetName'),copyIndex(1))]"
                            ],
                            "apiVersion": "[parameters('netApiVersionNum')]",
                            "properties": {
                                "addressPrefix": "[parameters('dataSubnetCidrs')[copyIndex()]]",
                                "routeTable": {
                                    "id": "[parameters('spokeRouteTableId')]"
                                }
                            },
                            "copy": {
                                "name": "spokerouteassign",
                                "count": "[length(parameters('spokeCidrs'))]"
                            }
                        }
                    ]
                }
            }
        },
        /* Create Virtual Network Peering on hub to peer each spoke to it */
        {
            "name": "[concat(parameters('hubVnetName'),'/',variables('hubToSpokePeeringName'),copyIndex(1))]",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('hubVnetName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('spokeVnetName'),copyIndex(1))]",
                "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('hubVngName'))]",
                "Microsoft.Resources/deployments/routeAssignment"
            ],
            "properties": {
                "allowVirtualNetworkAccess": "true",
                "allowForwardedTraffic": "true",
                "allowGatewayTransit": "true",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks',concat(parameters('spokeVnetName'),copyIndex(1)))]"
                }
            },
            "copy": {
                "name": "copyhubpeerings",
                "count": "[length(parameters('spokeCidrs'))]"
            }
        },
        /* Create Virtual Network Peering on each spoke to peer it to the hub */
        {
            "name": "[concat(parameters('spokeVnetName'),copyIndex(1),'/',variables('spokeToHubPeeringName'))]",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('hubVnetName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('spokeVnetName'),copyIndex(1))]",
                "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('hubVngName'))]",
                "Microsoft.Resources/deployments/routeAssignment"
            ],
            "properties": {
                "allowVirtualNetworkAccess": "true",
                "allowForwardedTraffic": "true",
                "allowGatewayTransit": "false",
                "useRemoteGateways": "true",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('hubVnetName'))]"
                }
            },
            "copy": {
                "name": "copyspokepeerings",
                "count": "[length(parameters('spokeCidrs'))]"
            }
        },
        /* Deploy a VM into the primary subnet in the hub Virtual Network */
        {
            "name": "vmhp01",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourceDeploymentsApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('hubVnetName'))]",
                "[concat('Microsoft.Network/routeTables/', parameters('hubPriRouteTable'))]",
                "[concat('Microsoft.Network/routeTables/', parameters('hubSecRouteTable'))]",
                "[concat('Microsoft.Network/azureFirewalls/', parameters('azureFirewallName'))]",
                "[concat('Microsoft.OperationalInsights/workspaces/', variables('laWorkspaceName'))]",
                "Microsoft.Resources/deployments/routeAssignment"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "tagValues": {
                        "value": "[parameters('tags')]"
                    },
                    "vmName": {
                        "value": "vmhubprim"
                    },
                    "vnetName": {
                        "value": "[parameters('hubVnetName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('primarySubnetName')]"
                    },
                    "virtualMachineSize": {
                        "value": "[parameters('vmSku')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "myWorkspaceId": {
                        "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').customerId]"
                    },
                    "myWorkspaceKey": {
                        "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').primarySharedKey]"
                    }
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/mattfeltonma/arm-templates/master/examples/vm-windows-server-2016/vm-win-2016.json",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        /* Deploy two VMs into the secondary subnet in the hub Virtual Network */
        {
            "name": "[concat('vmhs0',copyIndex(1))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourceDeploymentsApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('hubVnetName'))]",
                "[concat('Microsoft.Network/routeTables/', parameters('hubPriRouteTable'))]",
                "[concat('Microsoft.Network/routeTables/', parameters('hubSecRouteTable'))]",
                "[concat('Microsoft.Network/azureFirewalls/',parameters('azureFirewallName'))]",
                "[concat('Microsoft.OperationalInsights/workspaces/', variables('laWorkspaceName'))]",
                "Microsoft.Resources/deployments/routeAssignment"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "tagValues": {
                        "value": "[parameters('tags')]"
                    },
                    "vmName": {
                        "value": "[concat('vmhubsec',copyIndex(1))]"
                    },
                    "vnetName": {
                        "value": "[parameters('hubVnetName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('secondarySubnetName')]"
                    },
                    "virtualMachineSize": {
                        "value": "[parameters('vmSku')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "myWorkspaceId": {
                        "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').customerId]"
                    },
                    "myWorkspaceKey": {
                        "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').primarySharedKey]"
                    }
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/mattfeltonma/arm-templates/master/examples/vm-windows-server-2016/vm-win-2016.json",
                    "contentVersion": "1.0.0.0"
                }
            },
            "copy": {
                "name": "vmhubsec",
                "count": 2
            }
        },
        /* Deploy a VM into the primary subnet in the on-premises Virtual Network */
        {
            "name": "vmop01",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourceDeploymentsApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('onPremVnetName'))]",
                "[concat('Microsoft.Network/connections/', variables('onpremVngConnName'))]",
                "[concat('Microsoft.Network/connections/', variables('hubVngConnName'))]",
                "[concat('Microsoft.Network/routeTables/', parameters('hubVNGRouteTable'))]",
                "[concat('Microsoft.Network/azureFirewalls/', parameters('azureFirewallName'))]",
                "[concat('Microsoft.OperationalInsights/workspaces/', variables('laWorkspaceName'))]",
                "Microsoft.Resources/deployments/routeAssignment"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "tagValues": {
                        "value": "[parameters('tags')]"
                    },
                    "vmName": {
                        "value": "vmonprempri"
                    },
                    "vnetName": {
                        "value": "[parameters('onPremVnetName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('primarySubnetName')]"
                    },
                    "virtualMachineSize": {
                        "value": "[parameters('vmSku')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "myWorkspaceId": {
                        "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').customerId]"
                    },
                    "myWorkspaceKey": {
                        "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').primarySharedKey]"
                    }
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/mattfeltonma/arm-templates/master/examples/vm-windows-server-2016/vm-win-2016.json",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        /* Deploy a VM into the app subnet in each spoke Virtual Network */
        {
            "name": "[concat('vmsa0',copyIndex(1))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourceDeploymentsApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('spokeVnetName'), copyIndex(1))]",
                "[concat(concat('Microsoft.Network/virtualNetworks/', parameters('spokeVnetName'), copyIndex(1)),'/virtualNetworkPeerings/',variables('spokeToHubPeeringName'))]",
                "[concat('Microsoft.Network/virtualNetworks/',parameters('hubVnetName'),'/virtualNetworkPeerings/',variables('hubToSpokePeeringName'),copyIndex(1))]",
                "[concat(concat('Microsoft.Network/routeTables/',parameters('hubPriRouteTable')),'/routes/',concat('udr-spoke',copyIndex(1)))]",
                "[concat(concat('Microsoft.Network/routeTables/',parameters('hubSecRouteTable')),'/routes/',concat('udr-spoke',copyIndex(1)))]",
                "[concat('Microsoft.Network/routeTables/',parameters('spokeRouteTable'))]",
                "[concat('Microsoft.Network/azureFirewalls/', parameters('azureFirewallName'))]",
                "[concat('Microsoft.OperationalInsights/workspaces/', variables('laWorkspaceName'))]",
                "[concat('Microsoft.Network/virtualNetworks/',parameters('hubVnetName'),'/virtualNetworkPeerings/',variables('hubToSpokePeeringName'),copyIndex(1))]",
                "Microsoft.Resources/deployments/routeAssignment"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "tagValues": {
                        "value": "[parameters('tags')]"
                    },
                    "vmName": {
                        "value": "[concat('vmspoke',copyIndex(1),'app')]"
                    },
                    "vnetName": {
                        "value": "[concat(parameters('spokeVnetName'),copyIndex(1))]"
                    },
                    "subnetName": {
                        "value": "[concat(parameters('appSubnetName'),copyIndex(1))]"
                    },
                    "virtualMachineSize": {
                        "value": "[parameters('vmSku')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "myWorkspaceId": {
                        "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').customerId]"
                    },
                    "myWorkspaceKey": {
                        "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').primarySharedKey]"
                    }
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/mattfeltonma/arm-templates/master/examples/vm-windows-server-2016/vm-win-2016.json",
                    "contentVersion": "1.0.0.0"
                }
            },
            "copy": {
                "name": "vmspokeapp",
                "count": "[length(parameters('spokeCidrs'))]"
            }
        },
        /* Create an Azure Bastion instance in the hub Virtual Network */
        {
            "name": "[parameters('bastionName')]",
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "[variables('netApiVersionNum')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/',parameters('bastionPublicIpName'))]",
                "[concat('Microsoft.Network/virtualNetworks/',parameters('hubVnetName'))]",
                "Microsoft.Resources/deployments/vmhp01",
                "Microsoft.Resources/deployments/vmhs01",
                "Microsoft.Resources/deployments/vmhs02"
            ],
            "tags": "[parameters('tags')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "bastionConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubVnetName'), variables('bastionSubnetName'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('bastionPublicIpName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "VmHubPrimaryIp": {
            "type": "string",
            "value": "[reference('vmhp01').outputs.vmPrivateIpAddress.value]"
        },
        "VmHubSecondary1Ip": {
            "type": "string",
            "value": "[reference('vmhs01').outputs.vmPrivateIpAddress.value]"
        },
        "VmHubSecondary2Ip": {
            "type": "string",
            "value": "[reference('vmhs01').outputs.vmPrivateIpAddress.value]"
        },
        "VmOnPremisesIp": {
            "type": "string",
            "value": "[reference('vmop01').outputs.vmPrivateIpAddress.value]"
        },
        "VmSpoke1AppIp": {
            "type": "string",
            "value": "[reference('vmsa01').outputs.vmPrivateIpAddress.value]"
        },
        "VmSpoke2AppIp": {
            "type": "string",
            "value": "[reference('vmsa02').outputs.vmPrivateIpAddress.value]"
        }
    }
}
